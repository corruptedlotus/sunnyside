// <auto-generated />
using System;
using Anovase.Sunnyside.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Anovase.Sunnyside.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250321100446_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Anovase.Sunnyside.Backlog.Directive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Immediate")
                        .HasColumnType("bit");

                    b.Property<int>("Management")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Objective")
                        .HasColumnType("int");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Backlog");
                });

            modelBuilder.Entity("Anovase.Sunnyside.Backlog.TaskType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DerivativeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCounted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DerivativeId");

                    b.ToTable("TaskTypes");
                });

            modelBuilder.Entity("Anovase.Sunnyside.Cycles.Cycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cycles");
                });

            modelBuilder.Entity("Anovase.Sunnyside.Cycles.TaskInstance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CycleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DirectiveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Objective")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TimeAllocated")
                        .HasColumnType("float");

                    b.Property<double>("TimeTracked")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CycleId");

                    b.HasIndex("DirectiveId");

                    b.ToTable("TaskInstance");
                });

            modelBuilder.Entity("Anovase.Sunnyside.Backlog.Directive", b =>
                {
                    b.HasOne("Anovase.Sunnyside.Backlog.TaskType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Anovase.Sunnyside.Backlog.TaskType", b =>
                {
                    b.HasOne("Anovase.Sunnyside.Backlog.TaskType", "Derivative")
                        .WithMany()
                        .HasForeignKey("DerivativeId");

                    b.Navigation("Derivative");
                });

            modelBuilder.Entity("Anovase.Sunnyside.Cycles.TaskInstance", b =>
                {
                    b.HasOne("Anovase.Sunnyside.Cycles.Cycle", "Cycle")
                        .WithMany("Tasks")
                        .HasForeignKey("CycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anovase.Sunnyside.Backlog.Directive", "Directive")
                        .WithMany()
                        .HasForeignKey("DirectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cycle");

                    b.Navigation("Directive");
                });

            modelBuilder.Entity("Anovase.Sunnyside.Cycles.Cycle", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
